[{"D:\\Bootcamp\\task\\src\\index.js":"1","D:\\Bootcamp\\task\\src\\App.js":"2","D:\\Bootcamp\\task\\src\\Context\\GlobalContext.jsx":"3","D:\\Bootcamp\\task\\src\\Pages\\LandingPage\\LandingPage.jsx":"4","D:\\Bootcamp\\task\\src\\Component\\PrivateRoute.jsx":"5","D:\\Bootcamp\\task\\src\\Component\\Sidebar.jsx":"6","D:\\Bootcamp\\task\\src\\Pages\\Users\\Home\\Home.jsx":"7","D:\\Bootcamp\\task\\src\\Component\\Home\\data.js":"8","D:\\Bootcamp\\task\\src\\Component\\Home\\Card.jsx":"9","D:\\Bootcamp\\task\\src\\Pages\\Users\\Subscribe\\Subscribe.jsx":"10","D:\\Bootcamp\\task\\src\\Pages\\Users\\Profile\\Profile.jsx":"11","D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Book.jsx":"12","D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Read.jsx":"13","D:\\Bootcamp\\task\\src\\Pages\\Admin\\Transaction.jsx":"14","D:\\Bootcamp\\task\\src\\Pages\\Admin\\AddBook.jsx":"15","D:\\Bootcamp\\integration\\client\\src\\index.js":"16","D:\\Bootcamp\\integration\\client\\src\\App.js":"17","D:\\Bootcamp\\integration\\client\\src\\Context\\GlobalContext.jsx":"18","D:\\Bootcamp\\integration\\client\\src\\Component\\PrivateRoute.jsx":"19","D:\\Bootcamp\\integration\\client\\src\\Component\\Sidebar.jsx":"20","D:\\Bootcamp\\integration\\client\\src\\Pages\\LandingPage\\LandingPage.jsx":"21","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Home\\Home.jsx":"22","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Book\\Book.jsx":"23","D:\\Bootcamp\\integration\\client\\src\\Pages\\Admin\\AddBook.jsx":"24","D:\\Bootcamp\\integration\\client\\src\\Pages\\Admin\\Transaction.jsx":"25","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Profile\\Profile.jsx":"26","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Subscribe\\Subscribe.jsx":"27","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Book\\Read.jsx":"28","D:\\Bootcamp\\integration\\client\\src\\Component\\Home\\data.js":"29","D:\\Bootcamp\\integration\\client\\src\\Component\\Home\\Card.jsx":"30","D:\\Bootcamp\\integration\\client\\src\\Config\\Api.js":"31","D:\\Bootcamp\\integration\\client\\src\\Component\\Loading.jsx":"32","D:\\Bootcamp\\integration\\client\\src\\Context\\BooksContext.jsx":"33","D:\\Bootcamp\\integration\\client\\src\\Component\\Transaction\\TableTransaction.js":"34"},{"size":383,"mtime":1612220987229,"results":"35","hashOfConfig":"36"},{"size":1692,"mtime":1612385383054,"results":"37","hashOfConfig":"36"},{"size":1201,"mtime":1612260740201,"results":"38","hashOfConfig":"36"},{"size":5971,"mtime":1612384049115,"results":"39","hashOfConfig":"36"},{"size":487,"mtime":1612235315941,"results":"40","hashOfConfig":"36"},{"size":2011,"mtime":1612246952364,"results":"41","hashOfConfig":"36"},{"size":797,"mtime":1612247076182,"results":"42","hashOfConfig":"36"},{"size":3948,"mtime":1612186107584,"results":"43","hashOfConfig":"36"},{"size":1512,"mtime":1612262769914,"results":"44","hashOfConfig":"36"},{"size":3527,"mtime":1612248520468,"results":"45","hashOfConfig":"36"},{"size":3304,"mtime":1612263493378,"results":"46","hashOfConfig":"36"},{"size":2638,"mtime":1612381281379,"results":"47","hashOfConfig":"36"},{"size":600,"mtime":1612268912980,"results":"48","hashOfConfig":"36"},{"size":6296,"mtime":1612384779110,"results":"49","hashOfConfig":"36"},{"size":4113,"mtime":1612385690139,"results":"50","hashOfConfig":"36"},{"size":503,"mtime":1613247057032,"results":"51","hashOfConfig":"52"},{"size":2487,"mtime":1614334271734,"results":"53","hashOfConfig":"52"},{"size":2331,"mtime":1614152442475,"results":"54","hashOfConfig":"52"},{"size":487,"mtime":1612235315941,"results":"55","hashOfConfig":"52"},{"size":2723,"mtime":1614152301720,"results":"56","hashOfConfig":"52"},{"size":7399,"mtime":1613342481313,"results":"57","hashOfConfig":"52"},{"size":1674,"mtime":1614773167238,"results":"58","hashOfConfig":"52"},{"size":4482,"mtime":1614768375652,"results":"59","hashOfConfig":"52"},{"size":8873,"mtime":1614150093736,"results":"60","hashOfConfig":"52"},{"size":3537,"mtime":1614151226532,"results":"61","hashOfConfig":"52"},{"size":7943,"mtime":1614773057325,"results":"62","hashOfConfig":"52"},{"size":4467,"mtime":1614770717855,"results":"63","hashOfConfig":"52"},{"size":1434,"mtime":1614770832421,"results":"64","hashOfConfig":"52"},{"size":3948,"mtime":1612186107584,"results":"65","hashOfConfig":"52"},{"size":973,"mtime":1614772415490,"results":"66","hashOfConfig":"52"},{"size":322,"mtime":1613046730594,"results":"67","hashOfConfig":"52"},{"size":304,"mtime":1613103003769,"results":"68","hashOfConfig":"52"},{"size":618,"mtime":1614149600513,"results":"69","hashOfConfig":"52"},{"size":1448,"mtime":1614768743611,"results":"70","hashOfConfig":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"163hbec",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"73"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"w3npni",{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"107"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"107"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"107"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Bootcamp\\task\\src\\index.js",[],["150","151"],"D:\\Bootcamp\\task\\src\\App.js",[],"D:\\Bootcamp\\task\\src\\Context\\GlobalContext.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\LandingPage\\LandingPage.jsx",[],"D:\\Bootcamp\\task\\src\\Component\\PrivateRoute.jsx",[],"D:\\Bootcamp\\task\\src\\Component\\Sidebar.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Home\\Home.jsx",[],"D:\\Bootcamp\\task\\src\\Component\\Home\\data.js",[],"D:\\Bootcamp\\task\\src\\Component\\Home\\Card.jsx",[],["152","153"],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Subscribe\\Subscribe.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Profile\\Profile.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Book.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Users\\Book\\Read.jsx",[],"D:\\Bootcamp\\task\\src\\Pages\\Admin\\Transaction.jsx",["154"],"import React, { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\r\nimport { faBook, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { AppContext } from \"../../Context/GlobalContext\"\r\n\r\nfunction Transaction() {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(AppContext);\r\n    function logout() {\r\n          dispatch({\r\n            type: \"LOGOUT\",\r\n          })\r\n          history.push(\"/\")\r\n      }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n        <img className=\"mb-5\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n      </Link>\r\n\r\n      <NavDropdown className=\"float-right inline admin-profile\" title={ <img src=\"/Img/Profile/AdminProfile.png\" alt=\"\" /> } >\r\n        <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n          <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n          Add Book\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={()=>logout()}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"mt-1 mb-5\">\r\n        <h3 className=\"name-home\">Incoming Transaction</h3>\r\n      </div>\r\n      <div className=\"table-reponsif\">\r\n        <table className=\"table table-striped mb-5\">\r\n          <thead>\r\n            <tr className=\"c-red\">\r\n              <th scope=\"col\">No</th>\r\n              <th scope=\"col\">Users</th>\r\n              <th scope=\"col\">Bukti Transfer</th>\r\n              <th scope=\"col\">Remaining Active</th>\r\n              <th scope=\"col\">Status Users</th>\r\n              <th scope=\"col\">Status Payment</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"align-middle\">\r\n              <th scope=\"row\">1</th>\r\n              <td >Radif</td>\r\n              <td>bukti1.jpg</td>\r\n              <td>26/Hari</td>\r\n              <td className=\"c-green\">Active</td>\r\n              <td className=\"c-green\">Approve</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">2</th>\r\n              <td>Haris Rahman</td>\r\n              <td>bukti2.jpg</td>\r\n              <td>26/Hari</td>\r\n              <td className=\"c-green\">Active</td>\r\n              <td className=\"c-green\">Approve</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">3</th>\r\n              <td>Amin Subagio</td>\r\n              <td>bukti3.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-red\">Cancel</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">4</th>\r\n              <td>Haris Astina</td>\r\n              <td>bukti4.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-yellow\">Pending</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">5</th>\r\n              <td>Aziz Oni On</td>\r\n              <td>bukti5.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-yellow\">Pending</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th scope=\"row\">6</th>\r\n              <td>Sugeng No Pants</td>\r\n              <td>bukti6.jpg</td>\r\n              <td>0/Hari</td>\r\n              <td className=\"c-red\">Not Active</td>\r\n              <td className=\"c-yellow\">Pending</td>\r\n              <td>\r\n                <NavDropdown className=\"inline admin-profile\">\r\n                  <Dropdown.Item className=\"font-dropdown-size c-green\">\r\n                    Approved\r\n                  </Dropdown.Item>\r\n                  <Dropdown.Item className=\"font-dropdown-size c-red\">\r\n                    Cancel\r\n                  </Dropdown.Item>\r\n                </NavDropdown>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","D:\\Bootcamp\\task\\src\\Pages\\Admin\\AddBook.jsx",["155"],"import React, { useContext } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown, Button } from \"react-bootstrap\";\r\nimport { faBook, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { AppContext } from \"../../Context/GlobalContext\"\r\n\r\nfunction AddBook() {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(AppContext);\r\n    function logout() {\r\n          dispatch({\r\n            type: \"LOGOUT\",\r\n          })\r\n          history.push(\"/\")\r\n      }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n        <img className=\"mb-5\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n      </Link>\r\n\r\n      <NavDropdown className=\"float-right inline admin-profile\" title={ <img src=\"/Img/Profile/AdminProfile.png\" alt=\"\" /> } >\r\n        <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n          <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n          Add Book\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={()=>logout()}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-md-7\">\r\n          <div className=\"mt-1 mb-5\">\r\n            <h3 className=\"name-home\">Add Book</h3>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Publication Date\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Pages\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"Author\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"ISBN\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control form-grey\"\r\n              name=\"AccountNumber\"\r\n              placeholder=\"About This Book\"\r\n            ></textarea>\r\n          </div>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-grey\"\r\n            name=\"file\"\r\n            id=\"actual-btn\"\r\n            hidden\r\n          />\r\n          <label for=\"actual-btn\" className=\"form-grey\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <p className=\"text-left inline c-grey pl-2 pr-2\">\r\n                  Attache Book File\r\n                </p>\r\n                <img\r\n                  className=\"inline\"\r\n                  style={{\r\n                    width: \"7%\",\r\n                    marginTop: \"-3px\",\r\n                  }}\r\n                  src=\"/Img/Content/Attach.png\"\r\n                  alt=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </label>\r\n          <div className=\"lp-button-group text-right\">\r\n            <Button variant=\"danger\" className=\"bg-red\" type=\"submit\">\r\n              Add Book <FontAwesomeIcon icon={faBook} className=\"ml-2\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","D:\\Bootcamp\\integration\\client\\src\\index.js",[],["156","157"],"D:\\Bootcamp\\integration\\client\\src\\App.js",["158"],"import React, { useContext, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport PrivateRoute from \"./Component/PrivateRoute\";\nimport { AppContext } from \"./Context/GlobalContext\";\nimport { API, setAuthToken } from \"./Config/Api\";\n\nimport LandingPage from \"./Pages/LandingPage/LandingPage\";\nimport Sidebar from \"./Component/Sidebar\";\nimport Loading from \"./Component/Loading\";\nimport Home from \"./Pages/Users/Home/Home\";\nimport Subscribe from \"./Pages/Users/Subscribe/Subscribe\";\nimport Profile from \"./Pages/Users/Profile/Profile\";\nimport Book from \"./Pages/Users/Book/Book\";\nimport Read from \"./Pages/Users/Book/Read\";\nimport Transaction from \"./Pages/Admin/Transaction\";\nimport AddBook from \"./Pages/Admin/AddBook\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nfunction App() {\n  const [state, dispatch] = useContext(AppContext);\n\n  const checkUser = async () => {\n    try {\n      const response = await API.get(\"/check-auth\");\n\n      if (response.status === 401) {\n        return dispatch({\n          type: \"AUTH_ERROR\",\n        });\n      }\n      \n      dispatch({\n        type: \"USER_LOADED\",\n        payload: response.data.data.user,\n      });\n    } catch (error) {\n      return dispatch({\n        type: \"AUTH_ERROR\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        {state.loading ? <Loading /> :\"\" }\n        {/* Tanpa Auth */}\n        <Route path=\"/\" exact component={LandingPage} />\n        {/* Dengan Auth */}\n        {/* Admin */}\n        <PrivateRoute path=\"/Transaction\" exact component={Transaction} />\n        <PrivateRoute path=\"/AddBook\" exact component={AddBook} />\n        {/* Users */}\n        <PrivateRoute path=\"/Book/:id/Read\" exact component={Read} />\n        <Container fluid className=\"mb-5\">\n          <Row>\n            <Col xs={3} id=\"sidebar-wrapper\">\n              <Sidebar />\n            </Col>\n            <Col xs={8} id=\"page-content-wrapper\">\n              <PrivateRoute path=\"/Home\" exact component={Home} />\n              <PrivateRoute path=\"/Subscribe\" exact component={Subscribe} />\n              <PrivateRoute path=\"/Profile\" exact component={Profile} />\n              <PrivateRoute path=\"/Book/:id/Detail\" exact component={Book} />\n            </Col>\n          </Row>\n        </Container>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\Bootcamp\\integration\\client\\src\\Context\\GlobalContext.jsx",[],"D:\\Bootcamp\\integration\\client\\src\\Component\\PrivateRoute.jsx",[],"D:\\Bootcamp\\integration\\client\\src\\Component\\Sidebar.jsx",["159","160"],"import React, { useContext, useEffect } from \"react\"\r\nimport { API } from \"../Config/Api\"\r\nimport { Nav } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { faUser, faFileInvoiceDollar, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { AppContext } from \"../Context/GlobalContext\"\r\n\r\nfunction Sidebar() {\r\n    const history = useHistory();\r\n    const [state, dispatch] = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n      if (state.user.role == \"Admin\") {\r\n        history.push(\"/transaction\");\r\n      }\r\n      Subscribe();\r\n    }, []);\r\n\r\n    const Subscribe = async (e) => {\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const transaction = await API.get(`/transaction/user/${state.user.id}`, config);\r\n\r\n      if (transaction.data.status === \"Success\") {\r\n        const subscribes = transaction.data.data.transaction.userStatus;\r\n        if (subscribes ===  \"Active\") {\r\n          dispatch({\r\n            type: \"SUBSCRIBE\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    function logout() {\r\n          dispatch({\r\n            type: \"LOGOUT\",\r\n          })\r\n          history.push(\"/\")\r\n      }\r\n  return (\r\n    <Nav className=\"col-md-10 d-md-block sidebar shadow-none margin-left \">\r\n      <Nav.Item className=\"text-center\">\r\n        <Nav.Link to=\"/Home\" as={Link}>\r\n          <img className=\"wow-mini mb-3\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n        </Nav.Link>\r\n        <img className=\"profile-home mb-4\" src=\"/Img/Profile/FotoProfile.png\" alt=\"\" />\r\n        <h6 className=\"mb-3 font-wg\">{state.user.fullName ? state.user.fullName : \"Error\"}</h6>\r\n        <h6 className={state.subscribe ? \"c-green font-wg\" : \"c-red font-wg\"}>{state.subscribe ? \"Subscribed\" : \"Not Subscribed Yet\"}</h6>\r\n        <div className=\"line-home mt-4\" />\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link to=\"/Profile\" as={Link} className=\"c-grey onclick mt-4\">\r\n            <FontAwesomeIcon icon={faUser} className=\"mr-4\" />Profile\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link to=\"/Subscribe\" as={Link} className=\"c-grey onclick mt-5\">\r\n          <FontAwesomeIcon icon={faFileInvoiceDollar} className=\"mr-4\" />Subscribe\r\n        </Nav.Link>\r\n        <div className=\"line-home mt-4\" />\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        <Nav.Link onClick={()=>logout()} className=\"c-grey onclick mt-4\">\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4\" />Logout\r\n        </Nav.Link>\r\n      </Nav.Item>\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\Bootcamp\\integration\\client\\src\\Pages\\LandingPage\\LandingPage.jsx",["161"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { API, setAuthToken } from \"../../Config/Api\";\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\nimport { Button, Modal, Alert } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction LandingPage() {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(AppContext);\r\n\r\n  useEffect(() => {\r\n    if (!state.loading && state.isLogin) history.push(\"/Home\");\r\n  }, []);\r\n\r\n  const [signIn, setSignIn] = useState(false);\r\n  const [signUp, setSignUp] = useState(false);\r\n  const [showRegister, setShowRegister] = useState(false);\r\n  const [showLogin, setShowLogin] = useState(false);\r\n  const [FormData, setForm] = useState({\r\n    fullName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    gender: \"\",\r\n    subscribe: \"\",\r\n  });\r\n\r\n  const { fullName, email, password, phone, address, gender } = FormData;\r\n\r\n  const Register = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = JSON.stringify({\r\n        fullName, email, password, phone, address, gender\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/register\", body, config);\r\n      await dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n        payloadToken: user.data.data.token,\r\n      });\r\n\r\n      setAuthToken(user.data.data.token);\r\n\r\n      history.push(\"/Home\");\r\n    } catch (error) {\r\n      setShowRegister((\r\n        <Alert variant=\"danger\" onClose={() => setShowRegister(false)} dismissible>\r\n          <p>Email already exists</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n\r\n  const Login = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = JSON.stringify({\r\n        email,\r\n        password\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const user = await API.post(\"/login\", body, config);\r\n\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: user.data.data.user,\r\n        payloadToken: user.data.data.token,\r\n      });\r\n\r\n      setAuthToken(user.data.data.token);\r\n\r\n      history.push(\"/Home\");\r\n    } catch (error) {\r\n      setShowLogin((\r\n        <Alert variant=\"danger\" onClose={() => setShowLogin(false)} dismissible>\r\n          <p>Username or password incorrect</p>\r\n        </Alert>\r\n      ))\r\n    }\r\n  };\r\n  const onChange = (e) => {\r\n    setForm({ ...FormData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSignIn(false)\r\n    setSignUp(false)\r\n  }\r\n  const handleSignIn = () => {\r\n    setSignUp(false)\r\n    setSignIn(true)\r\n  }\r\n  const handleSignUp = () => {\r\n    setSignIn(false)\r\n    setSignUp(true)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className=\"wrapper mt-4\">\r\n      { state.isLogin? history.push(\"/Home\") : \"\" }\r\n      <img className=\"lp-rakbuku\" src=\"Img/Content/lp-RakBuku.png\" alt=\"\" />\r\n      <img className=\"lp-wow\" src=\"Img/Content/wow.png\" alt=\"\" />\r\n      <div className=\"lp-box\">\r\n        <div className=\"lp-text\">\r\n          Sign-up now and subscribe to enjoy all the cool and latest books - The\r\n          best book rental service provider in Indonesia\r\n        </div>\r\n        <div className=\"lp-button-group\">\r\n          <Button variant=\"danger\" className=\"lp-sign bg-red\" onClick={handleSignUp}>\r\n            Sign Up\r\n          </Button>\r\n          <Button variant=\"secondary\" className=\"lp-sign c-black bg-grey\" onClick={handleSignIn} >\r\n            Sign In\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {/* Modal Sign In */}\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={signIn} onHide={handleClose}>\r\n        <Modal.Body id=\"contained-modal-title-vcenter\">\r\n          <div className=\"mt-4\">\r\n            <h2 className=\"mb-4\"> Sign In</h2>\r\n            <form onSubmit={(e) => Login(e)} >\r\n              <div className=\"form-group\">\r\n                {showLogin}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"email\" className=\"form-control form-grey\" name=\"email\" onChange={(e) => onChange(e)} placeholder=\"Email\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control form-grey\" name=\"password\" onChange={(e) => onChange(e)} placeholder=\"Password\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Button variant=\"danger\" className=\"form-control bg-red\" type=\"submit\"> Sign In </Button>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <h6>Don't have an account? Klik <b className=\"cursor inline font-wg\" onClick={handleSignUp}>Here</b></h6>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n      {/* Modal Sign Up */}\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered dialogClassName=\"modal-sign\" show={signUp} onHide={handleClose}>\r\n        <Modal.Body className=\"width-80\" id=\"contained-modal-title-vcenter\">\r\n          <div className=\"mt-4\">\r\n\r\n            <h2 className=\"mb-4\"> Sign Up</h2>\r\n            <form onSubmit={(e) => Register(e)} >\r\n              <div className=\"form-group\">\r\n                {showRegister}\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\"  className=\"form-control form-grey\" name=\"fullName\"  onChange={(e) => onChange(e)} placeholder=\"Full Name\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"email\"  className=\"form-control form-grey\" name=\"email\"  onChange={(e) => onChange(e)} placeholder=\"Email\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"password\" className=\"form-control  form-grey\" name=\"password\" onChange={(e) => onChange(e)} placeholder=\"Password\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select name=\"gender\" className=\"form-control  form-grey\" onChange={(e) => onChange(e)} >\r\n                  <option disabled selected>== Gender ==</option>\r\n                  <option value=\"Male\">Male</option>\r\n                  <option value=\"Female\">Female</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"number\" className=\"form-control  form-grey\" name=\"phone\" onChange={(e) => onChange(e)} placeholder=\"Phone Number\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input type=\"text\" className=\"form-control  form-grey\" name=\"address\" onChange={(e) => onChange(e)} placeholder=\"Address\" />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Button variant=\"danger\" className=\"form-control bg-red\" type=\"submit\"> Sign Up </Button>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <h6>Already have an account? Klik <b className=\"cursor inline font-wg\" onClick={handleSignIn}>Here</b></h6>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default LandingPage;\r\n\r\n\r\n","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Home\\Home.jsx",[],"D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Book\\Book.jsx",["162","163"],"D:\\Bootcamp\\integration\\client\\src\\Pages\\Admin\\AddBook.jsx",["164"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown, Button, Modal } from \"react-bootstrap\";\r\nimport { faBook, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { API } from \"../../Config/Api\";\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\n\r\nfunction AddBook() {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [msg, setMsg] = useState(null);\r\n  const [color, setColor] = useState(null);\r\n  const [alert, setAlert] = useState(false);\r\n  const handleAlert = () => {\r\n      setAlert(true)\r\n  }\r\n  const handleAlertc = () => {\r\n      setAlert(false)\r\n  }\r\n  const [form, setForm] = useState({\r\n    title : \"\",\r\n    publicationDate : \"\",\r\n    pages : null,\r\n    author : \"\",\r\n    isbn : null,\r\n    about : \"\",\r\n  }); \r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const [formCover, setFormCover] = useState({\r\n    coverName : \"\",\r\n    coverFile : null,\r\n  });\r\n\r\n  const coverHandler = (e) => {\r\n    setFormCover({\r\n      coverFile : e.target.files[0],\r\n      coverName : e.target.files[0].name\r\n    })\r\n  };\r\n  const [formBook, setFormBook] = useState({\r\n    bookName : \"\",\r\n    bookFile : null,\r\n  });\r\n\r\n  const bookHandler = (e) => {\r\n    setFormBook({\r\n      bookFile : e.target.files[0],\r\n      bookName : e.target.files[0].name\r\n    })\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (state.user.role !== \"Admin\") {\r\n      history.push(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  const { title, publicationDate, pages, author, isbn, about } = form;\r\n  const { coverFile } = formCover;\r\n  const { bookFile } = formBook;\r\n\r\n  const addBook = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n      const body = new FormData();\r\n      body.append(\"title\", title);\r\n      body.append(\"publicationDate\", publicationDate);\r\n      body.append(\"pages\", pages);\r\n      body.append(\"author\", author);\r\n      body.append(\"isbn\", isbn);\r\n      body.append(\"about\", about);\r\n      body.append(\"coverFile\", coverFile);\r\n      body.append(\"bookFile\", bookFile);\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      await API.post('/books', body, config);\r\n      setLoading(false)\r\n      setColor(\"text-center c-green\");\r\n      setMsg(\"Add book is success\");\r\n      handleAlert();\r\n    } catch (error) {\r\n      setLoading(false)\r\n      setColor(\"text-center c-red\");\r\n      setMsg(\"Add book is failed\");\r\n      handleAlert();\r\n    }\r\n  }\r\n\r\n  function logout() {\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    });\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n        <img className=\"mb-5\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n      </Link>\r\n\r\n      <NavDropdown\r\n        className=\"float-right inline admin-profile\"\r\n        title={<img src=\"/Img/Profile/AdminProfile.png\" alt=\"\" />}\r\n      >\r\n        <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n          <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n          Add Book\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={() => logout()}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"row mb-5\">\r\n        <div className=\"col-md-7\">\r\n          <div className=\"mt-1 mb-5\">\r\n            <h3 className=\"name-home\">Add Book</h3>\r\n          </div>\r\n          <form onSubmit={(e) => addBook(e)}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"title\"\r\n                placeholder=\"Title\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"publicationDate\"\r\n                placeholder=\"Publication Date\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"pages\"\r\n                placeholder=\"Pages\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"author\"\r\n                placeholder=\"Author\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"isbn\"\r\n                placeholder=\"ISBN\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control form-grey\" onChange={(e) => onChange(e)}\r\n                name=\"about\"\r\n                placeholder=\"About This Book\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-grey\" onChange={(e) => coverHandler(e)}\r\n                name=\"coverFile\"\r\n                id=\"actual-btn\"\r\n                hidden\r\n              />\r\n              <label for=\"actual-btn\" className=\"form-grey\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <p className=\"text-left inline c-grey pl-2 pr-2\">\r\n                      Attache Cover File\r\n                    </p>\r\n                    <img\r\n                      className=\"inline\"\r\n                      style={{\r\n                        width: \"7%\",\r\n                        marginTop: \"-3px\",\r\n                      }}\r\n                      src=\"/Img/Content/Attach.png\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </label>\r\n              <p style={{display: \"inline\"}} className=\"ml-3\">{formCover.coverName ? formCover.coverName : \"No file chosen\"}</p>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"file\"\r\n                className=\"form-grey\" onChange={(e) => bookHandler(e)}\r\n                name=\"bookFile\"\r\n                id=\"actual-btn2\"\r\n                hidden\r\n              />\r\n              <label for=\"actual-btn2\" className=\"form-grey\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-12\">\r\n                    <p className=\"text-left inline c-grey pl-2 pr-2\">\r\n                      Attache Book File\r\n                    </p>\r\n                    <img\r\n                      className=\"inline\"\r\n                      style={{\r\n                        width: \"7%\",\r\n                        marginTop: \"-3px\",\r\n                      }}\r\n                      src=\"/Img/Content/Attach.png\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </label>\r\n              <p style={{display: \"inline\"}} className=\"ml-3\">{formBook.bookName ? formBook.bookName : \"No file chosen\"}</p>\r\n            </div>\r\n\r\n            {JSON.stringify(form)}\r\n\r\n            <div className=\"lp-button-group text-right\">\r\n            {loading ? (\r\n                <Button variant=\"danger\" className=\"bg-red\" disabled>\r\n                  <div class=\"spinner-border spinner-border-sm text-light mr-2\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                  Add Book <FontAwesomeIcon icon={faBook} className=\"ml-2\" />\r\n                </Button>\r\n              ) : (\r\n                <Button variant=\"danger\" className=\"bg-red\" type=\"submit\">\r\n                  Add Book <FontAwesomeIcon icon={faBook} className=\"ml-2\" />\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <Modal aria-labelledby=\"contained-modal-title-vcenter\" centered show={alert} onHide={handleAlertc}>\r\n          <Modal.Body className=\"width-100\" id=\"contained-modal-title-vcenter\">\r\n              <p className={color}>{msg}</p>\r\n          </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddBook;\r\n","D:\\Bootcamp\\integration\\client\\src\\Pages\\Admin\\Transaction.jsx",["165"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavDropdown, Dropdown } from \"react-bootstrap\";\r\nimport { faBook, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { API } from \"../../Config/Api\";\r\nimport { AppContext } from \"../../Context/GlobalContext\";\r\nimport TableTransaction from \"../../Component/Transaction/TableTransaction\";\r\nimport Loading from \"../../Component/Loading\";\r\n\r\nfunction Transaction() {\r\n  const history = useHistory();\r\n  const [state, dispatch] = useContext(AppContext);\r\n  const [transaction, setTransaction] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (state.user.role !== \"Admin\") {\r\n      history.push(\"/\");\r\n    }\r\n    getTransaction();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const getTransaction = async () => {\r\n    try {\r\n      const transaction = await API.get(\"/transaction\");\r\n      await setTransaction(transaction.data.data.transactions);\r\n    } catch (error) {\r\n      \r\n    }\r\n  }\r\n\r\n  const action = async (id, userStatus, paymentStatus) => {\r\n    try {\r\n      const remainingActive = 30;\r\n      \r\n      const body = JSON.stringify({\r\n        remainingActive, userStatus, paymentStatus\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      setLoading(true);\r\n      const transaction = await API.patch(`/transaction/${id}`, body, config);\r\n      if (transaction) {\r\n        getTransaction();\r\n      }\r\n      setLoading(false);\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  function logout() {\r\n    dispatch({\r\n      type: \"LOGOUT\",\r\n    })\r\n    history.push(\"/\")\r\n  }\r\n  return (\r\n    <div className=\"mt-5 ml-5 pl-5 pr-5 mr-5 pr-5\">\r\n      <Link to=\"/Transaction\" as={Link} className=\"none-decoration inline\">\r\n        <img className=\"mb-5\" src=\"/Img/Content/wow-mini.png\" alt=\"\" />\r\n      </Link>\r\n\r\n      <NavDropdown className=\"float-right inline admin-profile\" title={ <img src=\"/Img/Profile/AdminProfile.png\" alt=\"\" /> } >\r\n        <Dropdown.Item to=\"/AddBook\" as={Link}>\r\n          <FontAwesomeIcon icon={faBook} className=\"mr-4 c-grey\" />\r\n          Add Book\r\n        </Dropdown.Item>\r\n        <Dropdown.Item onClick={()=>logout()}>\r\n          <FontAwesomeIcon icon={faSignOutAlt} className=\"mr-4 c-red\" />\r\n          Logout\r\n        </Dropdown.Item>\r\n      </NavDropdown>\r\n\r\n      <div className=\"mt-1 mb-5\">\r\n        <h3 className=\"name-home\">Incoming Transaction</h3>\r\n      </div>\r\n      <div className=\"table-reponsif\">\r\n        <table className=\"table table-striped mb-5\">\r\n          <thead>\r\n            <tr className=\"c-red\">\r\n              <th scope=\"col\">No</th>\r\n              <th scope=\"col\">Users</th>\r\n              <th scope=\"col\">Bukti Transfer</th>\r\n              <th scope=\"col\">Remaining Active</th>\r\n              <th scope=\"col\">Status Users</th>\r\n              <th scope=\"col\">Status Payment</th>\r\n              <th scope=\"col\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {loading ? (<Loading />) : transaction.map((transaction, index) =>(\r\n              <TableTransaction key={transaction.id} transaction={transaction} action={action} index={index} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transaction;\r\n","D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Profile\\Profile.jsx",["166"],"D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Subscribe\\Subscribe.jsx",["167"],"D:\\Bootcamp\\integration\\client\\src\\Pages\\Users\\Book\\Read.jsx",["168","169"],"D:\\Bootcamp\\integration\\client\\src\\Component\\Home\\data.js",[],["170","171"],"D:\\Bootcamp\\integration\\client\\src\\Component\\Home\\Card.jsx",[],"D:\\Bootcamp\\integration\\client\\src\\Config\\Api.js",[],"D:\\Bootcamp\\integration\\client\\src\\Component\\Loading.jsx",[],"D:\\Bootcamp\\integration\\client\\src\\Context\\BooksContext.jsx",[],"D:\\Bootcamp\\integration\\client\\src\\Component\\Transaction\\TableTransaction.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"172","replacedBy":"176"},{"ruleId":"174","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":12,"column":12,"nodeType":"180","messageId":"181","endLine":12,"endColumn":17},{"ruleId":"178","severity":1,"message":"179","line":12,"column":12,"nodeType":"180","messageId":"181","endLine":12,"endColumn":17},{"ruleId":"172","replacedBy":"182"},{"ruleId":"174","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":50,"column":6,"nodeType":"186","endLine":50,"endColumn":8,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":16,"column":27,"nodeType":"190","messageId":"191","endLine":16,"endColumn":29},{"ruleId":"184","severity":1,"message":"192","line":20,"column":8,"nodeType":"186","endLine":20,"endColumn":10,"suggestions":"193"},{"ruleId":"184","severity":1,"message":"194","line":13,"column":6,"nodeType":"186","endLine":13,"endColumn":8,"suggestions":"195"},{"ruleId":"184","severity":1,"message":"196","line":32,"column":6,"nodeType":"186","endLine":32,"endColumn":8,"suggestions":"197"},{"ruleId":"188","severity":1,"message":"189","line":51,"column":57,"nodeType":"190","messageId":"191","endLine":51,"endColumn":59},{"ruleId":"184","severity":1,"message":"198","line":63,"column":6,"nodeType":"186","endLine":63,"endColumn":8,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"198","line":25,"column":6,"nodeType":"186","endLine":25,"endColumn":8,"suggestions":"200"},{"ruleId":"184","severity":1,"message":"201","line":52,"column":6,"nodeType":"186","endLine":52,"endColumn":8,"suggestions":"202"},{"ruleId":"178","severity":1,"message":"203","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":14},{"ruleId":"178","severity":1,"message":"204","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"205","line":15,"column":6,"nodeType":"186","endLine":15,"endColumn":8,"suggestions":"206"},{"ruleId":"172","replacedBy":"207"},{"ruleId":"174","replacedBy":"208"},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],["209"],["210"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar",["209"],["210"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.","ArrayExpression",["211"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'Subscribe', 'history', and 'state.user.role'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'history', 'state.isLogin', and 'state.loading'. Either include them or remove the dependency array.",["213"],"React Hook useEffect has missing dependencies: 'book' and 'list'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'history' and 'state.user.role'. Either include them or remove the dependency array.",["215"],["216"],"React Hook useEffect has missing dependencies: 'book' and 'valueEdit'. Either include them or remove the dependency array.",["217"],"'Link' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'book'. Either include it or remove the dependency array.",["218"],["209"],["210"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"Update the dependencies array to be: [checkUser]",{"range":"234","text":"235"},"Update the dependencies array to be: [Subscribe, history, state.user.role]",{"range":"236","text":"237"},"Update the dependencies array to be: [history, state.isLogin, state.loading]",{"range":"238","text":"239"},"Update the dependencies array to be: [book, list]",{"range":"240","text":"241"},"Update the dependencies array to be: [history, state.user.role]",{"range":"242","text":"243"},{"range":"244","text":"243"},"Update the dependencies array to be: [book, valueEdit]",{"range":"245","text":"246"},"Update the dependencies array to be: [book]",{"range":"247","text":"248"},[1420,1422],"[checkUser]",[691,693],"[Subscribe, history, state.user.role]",[491,493],"[history, state.isLogin, state.loading]",[1062,1064],"[book, list]",[1731,1733],"[history, state.user.role]",[949,951],[1569,1571],"[book, valueEdit]",[489,491],"[book]"]